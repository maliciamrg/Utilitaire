on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - 'releases/**'


name: Create Release

jobs:
  # https://github.community/t/accessing-commit-message-in-pull-request-event/17158/8
  pre_ci:
    name: Prepare CI environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          # We need to fetch with a depth of 2 for pull_request so we can do HEAD^2
          fetch-depth: 2

        # If this workflow was triggered by a push then resolve the commit message from HEAD
        # It is stored in output steps, to be referenced with ${{ steps.push_get_commit_message.outputs.push_commit_message }}
      - name: "[Push] Get commit message"
        if: github.event_name == 'push'
        id: push_get_commit_message
        run:
          echo ::set-output name=push_commit_message::$(git log --format=%B -n 1 HEAD)

        # If this workflow was triggered by a pull request (open or synchronize!) then resolve the commit message from HEAD^2
        # It is stored in output steps, to be referenced with ${{ steps.pr_get_commit_message.outputs.pr_commit_message }}
      - name: "[Pull Request] Get commit message"
        if: github.event_name == 'pull_request'
        id: pr_get_commit_message
        run: echo ::set-output name=pr_commit_message::$(git log --format=%B -n 1 HEAD^2)

    # Finally we want to make the commit message available to other jobs. This can be done with job-level outputs
    # However as we do not know whether the commit message was set in Push or Pull Request event we need to do some
    # bash magic to resolve the one or the other
    #
    # For **Pull Request** events this will resolve to something like "$( [ -z "commit message pr" ] && echo "" || echo "commit message pr" )" which then resolves to just "commit message pr"
    #
    # For **Push** events this will resolve to something like "$( [ -z "" ] && echo "commit message push"  || echo "" )" which then resolves to just "commit message push"
    outputs:
      commit_message: $( [ -z "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" ] && echo "${{ steps.push_get_commit_message.outputs.push_commit_message }}" || echo "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" )

  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ needs.pre_ci.outputs.commit_message }}
          draft: false
          prerelease: false

  build:
    name: Build Release
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Build with Maven
        run: mvn -B package --file pom.xml

  publish:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}
